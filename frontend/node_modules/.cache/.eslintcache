[{"/Users/girdhar/Documents/GitHub/todo-app-react/src/index.js":"1","/Users/girdhar/Documents/GitHub/todo-app-react/src/App.js":"2","/Users/girdhar/Documents/GitHub/todo-app-react/src/reportWebVitals.js":"3","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Footer.js":"4","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Navbar.js":"5","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Main.js":"6","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/TodoItem.js":"7","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/AddTodo.js":"8"},{"size":535,"mtime":1676475317243,"results":"9","hashOfConfig":"10"},{"size":1639,"mtime":1676536477912,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1676475317244,"results":"12","hashOfConfig":"10"},{"size":599,"mtime":1676484355072,"results":"13","hashOfConfig":"10"},{"size":1817,"mtime":1676492253881,"results":"14","hashOfConfig":"10"},{"size":665,"mtime":1676489977517,"results":"15","hashOfConfig":"10"},{"size":459,"mtime":1676477307669,"results":"16","hashOfConfig":"10"},{"size":1289,"mtime":1676490287277,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17qtphv",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/girdhar/Documents/GitHub/todo-app-react/src/index.js",[],[],"/Users/girdhar/Documents/GitHub/todo-app-react/src/App.js",["45","46","47","48"],[],"import React, { useEffect, useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\nimport Main from './Components/Main';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n  Router,\n  Routes,\n  BrowserRouter\n} from \"react-router-dom\";\n\n\nfunction App() {\n  let tempTodo;\n\n  if (localStorage.getItem(\"todos\"))\n    tempTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  else\n    tempTodo = [];\n\n  const addTodo = (title, desc) => {\n    let newSno;\n    if (todos.length === 0)\n      newSno = 1 \n    else\n      newSno = todos[0].sno + 1;\n    \n    const newTodo = {\n      sno: newSno,\n      title: title,\n      desc: desc,\n    }\n    setTodos([newTodo, ...todos]);\n  }\n\n  const onDelete = (todo) => {\n    setTodos(todos.filter((element) => {\n      return (element !== todo);\n    }));\n  }\n\n  const deleteAll = () => setTodos([]);\n\n  const [todos, setTodos] = useState(tempTodo);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }, [todos])\n\n  return (\n    <>\n      <BrowserRouter>\n      <Navbar title=\"Girdhar To-Do!\" />\n        <Routes>\n          <Route path=\"/\" element={\n            <Main todos={todos} onDelete={onDelete} addTodo={addTodo} deleteAll={deleteAll}/>\n          } />\n          <Route index element={\n            <Main todos={todos} onDelete={onDelete} addTodo={addTodo} deleteAll={deleteAll}/>\n          } />\n          <Route path=\"/about\" element={<div>About</div>} />\n          <Route path=\"/pricing\" element={<div>Pricing</div>} />\n        </Routes>\n      <Footer />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n\n\n","/Users/girdhar/Documents/GitHub/todo-app-react/src/reportWebVitals.js",[],[],"/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Footer.js",["49","50","51"],[],"import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"py-3 fixed-bottom bg-body\">\n        <ul className=\"nav justify-content-center border-bottom pb-3 mb-3\">\n        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link px-2 text-muted\">Home</a></li>\n        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link px-2 text-muted\">Pricing</a></li>\n        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link px-2 text-muted\">About</a></li>\n        </ul>\n        <p className=\"text-center text-muted\">Â© 2023 Aditya Girdhar</p>\n    </footer>\n  )\n}\n","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Navbar.js",["52","53","54","55","56","57","58","59","60"],[],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    createBrowserRouter,\n    RouterProvider,\n    Route,\n    Link,\n    Router,\n    Routes,\n    BrowserRouter\n  } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg bg-light bg-gradient\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            <img className='m-2' src='https://upload.wikimedia.org/wikipedia/commons/6/67/Microsoft_To-Do_icon.png' width=\"30px\"></img>\n            {props.title}\n          </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mx-auto mb-2 mb-lg-0 \">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link active\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/pricing\" className=\"nav-link active\">Pricing</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link active\">About</Link>\n              </li>\n            </ul>\n              { props.button ? <a className=\"btn btn-outline-success\" href='https://github.com/AdityaGirdhar' target='_blank'>GitHub</a> : \"\"}\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nNavbar.defaultProps = {\n    title: \"Default Title\",\n    button: true\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string,\n    button: PropTypes.bool\n}\n","/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/Main.js",[],[],"/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/TodoItem.js",[],[],"/Users/girdhar/Documents/GitHub/todo-app-react/src/Components/AddTodo.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":6,"column":3,"nodeType":"63","messageId":"64","endLine":6,"endColumn":22},{"ruleId":"61","severity":1,"message":"65","line":7,"column":3,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":9,"column":3,"nodeType":"63","messageId":"64","endLine":9,"endColumn":7},{"ruleId":"61","severity":1,"message":"67","line":10,"column":3,"nodeType":"63","messageId":"64","endLine":10,"endColumn":9},{"ruleId":"68","severity":1,"message":"69","line":7,"column":34,"nodeType":"70","endLine":7,"endColumn":83},{"ruleId":"68","severity":1,"message":"69","line":8,"column":34,"nodeType":"70","endLine":8,"endColumn":83},{"ruleId":"68","severity":1,"message":"69","line":9,"column":34,"nodeType":"70","endLine":9,"endColumn":83},{"ruleId":"61","severity":1,"message":"62","line":4,"column":5,"nodeType":"63","messageId":"64","endLine":4,"endColumn":24},{"ruleId":"61","severity":1,"message":"65","line":5,"column":5,"nodeType":"63","messageId":"64","endLine":5,"endColumn":19},{"ruleId":"61","severity":1,"message":"71","line":6,"column":5,"nodeType":"63","messageId":"64","endLine":6,"endColumn":10},{"ruleId":"61","severity":1,"message":"67","line":8,"column":5,"nodeType":"63","messageId":"64","endLine":8,"endColumn":11},{"ruleId":"61","severity":1,"message":"72","line":9,"column":5,"nodeType":"63","messageId":"64","endLine":9,"endColumn":11},{"ruleId":"61","severity":1,"message":"73","line":10,"column":5,"nodeType":"63","messageId":"64","endLine":10,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":18,"column":11,"nodeType":"70","endLine":18,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":19,"column":13,"nodeType":"70","endLine":19,"endColumn":130},{"ruleId":"76","severity":1,"message":"77","line":37,"column":32,"nodeType":"70","messageId":"78","endLine":37,"endColumn":127,"fix":"79"},"no-unused-vars","'createBrowserRouter' is defined but never used.","Identifier","unusedVar","'RouterProvider' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Route' is defined but never used.","'Routes' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"80","text":"81"},[1588,1588]," rel=\"noreferrer\""]